{"version":3,"sources":["logo.svg","Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handleSearchFieldChange","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAe,I,kBCEFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,kBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,G,MAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAQC,KAAK,SACLb,UAAU,SACVW,YAAeA,EACfG,SAAYF,MCwCTG,E,kDAvCb,aAAc,IAAD,8BACX,gBAcFC,wBAA0B,SAACC,GACzB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,QACnC,WAAOC,QAAQC,IAAIN,EAAEG,OAAOC,WAf9B,EAAKG,MAAQ,CACXhB,SAAS,GACTW,YAAa,IAJJ,E,qDAQb,WAAqB,IAAD,OAClBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACV,SAAWqB,S,oBAS3C,WAAS,IAAD,EAC8BC,KAAKN,MAAjChB,EADF,EACEA,SAAUW,EADZ,EACYA,YACZY,EAAmBvB,EAASwB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAYW,YAAY,kBACZC,aAAekB,KAAKd,0BAEhC,cAAC,EAAD,CAAUR,SAAUuB,W,GAjCVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea723ed8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-constainer'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n    {\r\n        props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))\r\n      }\r\n    \r\n    </div>;\r\n}","import './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input  type='search'\r\n            className='search' \r\n            placeholder = {placeholder} \r\n            onChange = {handleChange}\r\n    />\r\n) ","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport {CardList} from './Components/card-list/card-list.component'\nimport {SearchBox} from './Components/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n\n  //VERY IMPORTANT !! -- https://reactjs.org/docs/handling-events.html\n  handleSearchFieldChange = (e) => {\n    this.setState({searchField: e.target.value},\n      () => {console.log(e.target.value)})\n  }\n\n  render(){\n    const { monsters, searchField }  =  this.state; \n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox  placeholder='search monsters' \n                    handleChange= {this.handleSearchFieldChange}\n        />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}